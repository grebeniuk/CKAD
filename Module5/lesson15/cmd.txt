
# Working with Namespaces
➜  lesson15 git:(main) ✗ k create ns ckad-ns1
namespace/ckad-ns1 created
➜  lesson15 git:(main) ✗ k run pod-a --image=httpd -n ckad-ns1
pod/pod-a created
➜  lesson15 git:(main) ✗ k run pod-b --image=nginx -n ckad-ns1

# Using Secrets
k get secrets e-my-pass
k describe secrets e-my-pass
k create deployment secretapp --image=nginx --replicas=1 --dry-run=client -o yaml > secretapp_dep.yaml 
k exec secretapp-65bfc68bdf-5tj7f -- env | grep MY_PASS


#Docker with custom images
docker build . -t test -o type=tar,dest=./greetworld

# Sidecar
k exec -n ckad-ns3 pod1 -c nginxcontainer -- ls /usr/share/nginx/html
k exec -n ckad-ns3 pod1 -c nginxcontainer -- curl http://localhost:80/date.log

# Fixing a Deployment
TODO

# Using Probes
k run livenesstest --image=nginx --dry-run=client -o yaml > livenesstest.yaml
k exec -n ckad-ns3 livenesstest -- curl http://localhost:80/healtz

# Creating a Deployment
k create deployment nginx-dep --image=nginx:1.18 --replicas=5 -o yaml > nginx-depl-repl.yaml

# Exposing Applications
k expose deployment nginx-deployment --type=NodePort --port=32000 --target-port=80 -n ckad-ns6
curl http://192.168.49.2:32000
k get svc -n ckad-ns6 -o yaml
curl http://192.168.49.2:31704
k create ingress simple --rule="mynginx.info/=nginx-deployment:32000" -n ckad-ns6


